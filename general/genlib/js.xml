<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY JS-download-http
           "http://ftp.mozilla.org/pub/mozilla.org/js/mozjs&JS-version;.tar.gz">
  <!ENTITY JS-download-ftp
           "ftp://ftp.mozilla.org/pub/mozilla.org/js/mozjs&JS-version;.tar.gz">
  <!ENTITY JS-md5sum        "20b6f8f1140ef6e47daa3b16965c9202">
  <!ENTITY JS-size          "6.5 MB">
  <!ENTITY JS-buildsize     "1.2 GB">
  <!ENTITY JS-time          "2.0 SBU">
]>

<sect1 id="JS" xreflabel="JS-&JS-version;">
  <?dbhtml filename="JS.html"?>

  <sect1info>
    <othername>$LastChangedBy: bdubbs $</othername>
    <date>$Date: 2014-09-09 21:00:35 +0200 (Tue, 09 Sep 2014) $</date>
  </sect1info>

  <title>JS-&JS-version;</title>

  <indexterm zone="JS">
    <primary sortas="a-JS">JS</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to JS</title>

    <para>
      <application>JS</application> is Mozilla's JavaScript engine
      written in C/C++.
    </para>

    &lfs77_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&JS-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&JS-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &JS-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &JS-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &JS-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &JS-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">JS Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="libffi"/>,
      <xref linkend="nspr"/>,
      <xref linkend="python2"/> and
      <xref linkend="zip"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="doxygen"/>
    </para>

    <para condition="html" role="usernotes">User Notes:
      <ulink url="&blfs-wiki;/JS"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation of JS</title>

    <para>
      Install <application>JS</application> by running the
      following commands:
    </para>

<screen><userinput>cd js/src &amp;&amp;
./configure --prefix=/usr       \
            --enable-readline   \
            --enable-threadsafe \
            --with-system-ffi   \
            --with-system-nspr &amp;&amp;
make</userinput></screen>

    <para>
      To test the results, issue: <command>make check</command>.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem>
      user:
    </para>

<screen role="root"><userinput>make install &amp;&amp;
find /usr/include/js-17.0/            \
     /usr/lib/libmozjs-17.0.a         \
     /usr/lib/pkgconfig/mozjs-17.0.pc \
     -type f -exec chmod -v 644 {} \;</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para>
      <option>--enable-threadsafe</option>: This switch enables
      support for multiple threads.
    </para>

    <para>
      <option>--enable-readline</option>: This switch enables
      <application>Readline</application> support in JS shell.
    </para>

    <para>
      <option>--with-system-ffi</option>: This switch forces the
      package to link to the system version of <application>libffi</application>
      instead of using its included, and now old, version.
    </para>

    <para>
      <option>--with-system-nspr</option>: This switch forces the
      package to link to the system version of <application>NSPR</application>
      instead of using its included, and now old, version.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directory</segtitle>

      <seglistitem>
        <seg>
          js17 and js17-config
        </seg>
        <seg>
          libmozjs-17.0.a and libmozjs-17.0.so
        </seg>
        <seg>
          /usr/include/js-17.0
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="js17">
        <term><command>js17</command></term>
        <listitem>
          <para>
            provides a command line interface to the JavaScript engine.
          </para>
          <indexterm zone="JS js17">
            <primary sortas="b-js17">js17</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="js17-config">
        <term><command>js17-config</command></term>
        <listitem>
          <para>
            is used to find out <application>JS</application>
            compiler and linker flags.
          </para>
          <indexterm zone="JS js17-config">
            <primary sortas="b-js17-config">js17-config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmozjs">
        <term><filename class="libraryfile">libmozjs-17.0.so</filename></term>
        <listitem>
          <para>
            contains the <application>Mozilla JavaScript</application> API functions.
          </para>
          <indexterm zone="JS libmozjs">
            <primary sortas="c-libmozjs">libmozjs-17.0.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
