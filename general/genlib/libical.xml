<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

<!ENTITY libical-download-http "https://github.com/libical/libical/releases/download/v&libical-version;/libical-&libical-version;.tar.gz">
  <!--
  <!ENTITY libical-download-http "https://github.com/libical/libical/archive/v&libical-version;.tar.gz">-->
  <!ENTITY libical-download-ftp  " ">
  <!ENTITY libical-md5sum        "af91db06b22559f863869c5a382ad08a">
  <!ENTITY libical-size          "704 KB">
  <!ENTITY libical-buildsize     "12 MB (additional 13 MB for the API documentation)">
  <!ENTITY libical-time          "0.1 SBU">
]>

<sect1 id="libical" xreflabel="libical-&libical-version;">
  <?dbhtml filename="libical.html"?>

  <sect1info>
    <othername>$LastChangedBy: krejzi $</othername>
    <date>$Date: 2014-10-30 10:46:15 +0100 (Thu, 30 Oct 2014) $</date>
  </sect1info>

  <title>libical-&libical-version;</title>

  <indexterm zone="libical">
    <primary sortas="a-libical">libical</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to libical</title>

    <para>
      The <application>libical</application> package contains an implementation
      of the iCalendar protocols and data formats.
    </para>

    &lfs77_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
<!--
    <note>

      <para>The download link below obtains
      <filename>libical-&libical-version;.tar.gz</filename> if a web browser
      such as <xref linkend="firefox"/> is used. This is the correct name
      for the archive, because it saves the file as <filename
      class="directory">libical-&libical-version;</filename>. However, if
      another method is used for downloading, e.g. <xref linkend="wget"/>, the
      file name is <filename>v&libical-version;.tar.gz</filename>, which is not
      acceptable. The file should be renamed to the correct filename
      <filename>libical-&libical-version;.tar.gz</filename>. You can achieve
      this automatically by using the command:</para>
    
 <screen><userinput>wget <ulink url="&libical-download-http;"/> -O libical-&libical-version;.tar.gz</userinput></screen>
    </note>
-->
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&libical-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&libical-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &libical-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &libical-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &libical-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &libical-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">libical Dependencies</bridgehead>

    <!-- Upstream recommends to use CMake since autotools
    doesn't bump soname for 0.48 -> 1.0 incompatibility -->
    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="cmake"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="doxygen"/> (for the API documentation)
    </para>

    <!-- Can't be built using CMake
    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="openjdk"/> and
      <xref linkend="python2"/> (must have <xref linkend="swig"/> also)
    </para> -->

    <para condition="html" role="usernotes">User Notes:
      <ulink url="&blfs-wiki;/libical"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation of libical</title>

    <para>
      Install <application>libical</application> by running the
      following commands:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd build &amp;&amp;

cmake -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_BUILD_TYPE=Release  \
      -DSHARED_ONLY=yes           \
      .. &amp;&amp;
make</userinput></screen>

    <para>
      If you have <xref linkend="doxygen"/> installed and wish to build the API
      documentation, issue:
    </para>

<screen><userinput>make docs</userinput></screen>

    <para>
      To test the results, issue: <command>make test</command>.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

    <para>
      If you have built the API documentation, install by issuing, as
      <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>install -vdm755 /usr/share/doc/libical-&libical-version;/html &amp;&amp;
cp -vr apidocs/html/* /usr/share/doc/libical-&libical-version;/html</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para>
      <parameter>-DCMAKE_BUILD_TYPE=Release</parameter>: This switch is used
      to apply higher level of the compiler optimizations.
    </para>

    <para>
      <parameter>-DSHARED_ONLY=yes</parameter>: This switch is used
      in order to only build the shared libraries.
    </para>

    <!-- No CMake equivalents
    <para>
      <parameter>- -enable-cxx</parameter>: This switch enables
      <application>libical</application> C++ library.
    </para>

    <para>
      <option>- -enable-python</option>: This switch enables
      <application>libical</application> Python bindings.
    </para> -->

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directory</segtitle>

      <seglistitem>
        <seg>
          None
        </seg>
        <seg>
          libical.so, libicalss.so and libicalvcal.so
        </seg>
        <seg>
          /usr/include/libical and
          /usr/share/doc/libical-&libical-version;/html
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libical-lib">
        <term><filename class="libraryfile">libical.so</filename></term>
        <listitem>
          <para>
            contains the <application>libical</application> API
            functions.
          </para>
          <indexterm zone="libical libical-lib">
            <primary sortas="c-libical">libical.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libicalss">
        <term><filename class="libraryfile">libicalss.so</filename></term>
        <listitem>
          <para>
            is a library that allows you to store iCal component data
            to disk in a variety of ways.
          </para>
          <indexterm zone="libical libicalss">
            <primary sortas="c-libicalss">libicalss.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libicalvcal">
        <term><filename class="libraryfile">libicalvcal.so</filename></term>
        <listitem>
          <para>
            is a vCard/vCalendar C interface.
          </para>
          <indexterm zone="libical libicalvcal">
            <primary sortas="c-libicalvcal">libicalvcal.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
