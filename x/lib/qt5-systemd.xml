<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY qt5-major "5.3">
  <!ENTITY qt5-url   "http://download.qt-project.org/official_releases/qt/&qt5-major;/&qt5-version;/single">

  <!ENTITY qt5-download-http "&qt5-url;/qt-everywhere-opensource-src-&qt5-version;.tar.xz">
  <!ENTITY qt5-download-ftp  " ">
  <!ENTITY qt5-md5sum        "c4e893678e3d8388ab04d059523d1d78">
  <!ENTITY qt5-size          "170 MB">
  <!ENTITY qt5-buildsize     "2.6 GB (169 MB installed)">
  <!ENTITY qt5-time          "93 SBU">
]>

<sect1 id="qt5" xreflabel="Qt-&qt5-version;">
  <?dbhtml filename="qt5.html" ?>

  <sect1info>
    <othername>$LastChangedBy: krejzi $</othername>
    <date>$Date: 2014-10-27 20:14:26 +0100 (Mon, 27 Oct 2014) $</date>
  </sect1info>

  <title>Qt-&qt5-version;</title>

  <indexterm zone="qt5">
    <primary sortas="a-Qt">Qt</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Qt5</title>

    <para>
      <application>Qt5</application> is a cross-platform application
      framework that is widely used for developing application software
      with a graphical user interface (GUI) (in which cases
      <application>Qt5</application> is classified as a widget toolkit), and
      also used for developing non-GUI programs such as command-line tools
      and consoles for servers. 
    </para>

    &lfs76_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&qt5-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&qt5-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &qt5-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &qt5-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &qt5-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &qt5-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Qt5 Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="alsa-lib"/>,
      <xref linkend="mesalib"/>,
      <xref linkend="xcb-util-image"/>,
      <xref linkend="xcb-util-keysyms"/>,
      <xref linkend="xcb-util-renderutil"/>, and
      <xref linkend="xcb-util-wm"/>
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend="cacerts"/>,
      <xref linkend="cups"/>,
      <xref linkend="dbus"/>,
      <xref linkend="glib2"/>,
      <xref linkend="gst-plugins-base"/>,
      <xref linkend="harfbuzz"/>,
      <xref linkend="icu"/> (unicode support, also required for QtWebKit),
      <xref linkend="libjpeg"/>,
      <xref linkend="libmng"/>,
      <xref linkend="libpng"/>,
      <xref linkend="libtiff"/>,
      <xref linkend="libxkbcommon"/>,
      <xref linkend="mtdev"/>,
      <xref linkend="openssl"/>,
      <xref linkend="pcre"/>,
      <xref linkend="ruby"/> (required for QtWebKit), and
      <xref linkend="sqlite"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="geoclue"/>,
      <xref linkend="gst10-plugins-base"/> (QtWebKit HTML5 Video Support),
      <xref linkend="gtk2"/> (GTK+ Theme Support),
      <xref linkend="ibus"/>,
      <xref linkend="mariadb"/>,
      <xref linkend="postgresql"/>,
      <xref linkend="pulseaudio"/>, and 
      <xref linkend="unixodbc"/>
    </para>

    <bridgehead renderas="sect4">Runtime Dependency</bridgehead>
    <para role="optional">
      <xref linkend="qtchooser"/> (required if installing both
      Qt4 and Qt5)
    </para>

    <para condition="html" role="usernotes">User Notes:
      <ulink url="&blfs-wiki;/qt5"/>
    </para>
  </sect2>

  <sect2 role="qt5-prefix">
    <title>Setting the installation prefix</title>

    <bridgehead renderas="sect3">Installing in /usr</bridgehead>

    <para>
      If you want to install <application>Qt5</application>
      in <filename class="directory">/usr</filename>, set the
      following environment variable:
    </para>

<screen><userinput>export QT5PREFIX=/usr</userinput></screen>

    <para>
      The advantage of installing in
      <filename class="directory">/usr</filename> is that no additional
      configuration is required. The package files are distributed
      within several subdirectories of the
      <filename class="directory">/usr</filename> hierarchy. This is
      the method that most distributions use. The disadvantage for BLFS
      users is that this <application>Qt5</application> instance cannot
      be upgraded while it is in use. It also does not allow reverting
      to an existing, known working instance of
      <application>Qt5</application>.
    </para>

    <bridgehead renderas="sect3">Installing in /opt/qt5</bridgehead>

    <para>
      If you want to install <application>Qt5</application>
      in a directory other than <filename
      class="directory">/usr</filename>, ie
      <filename class="directory">/opt/qt5</filename>, set
      the following environment variable:
    </para>

<screen><userinput>export QT5PREFIX=/opt/qt5</userinput></screen>

    <para>
      The advantage of installing <application>Qt5</application> in a
      custom directory such as <filename
      class="directory">/opt/qt5</filename> is that it keeps all the
      package files consolidated in a dedicated directory hierarchy. By
      using this method, an update can be made without overwriting a
      previous installation and users can easily revert to a previous
      version by changing one symbolic link or merely changing the
      PATH variable.
    </para>

    <tip>
      <para>
        Sometimes, the installation paths are hardcoded into installed files.
        This is the reason why <filename class="directory">/opt/qt5</filename>
        is used as installation prefix instead of <filename
        class="directory">/opt/qt-&qt5-version;</filename>. After installing
        <application>Qt5</application>, you may rename the directory and
        create a symlink:
      </para>

<screen role="root"><userinput>mv /opt/qt{5,-&qt5-version;}
ln -sfv qt-&qt5-version; /opt/qt5</userinput></screen>

      <para>
        Later on, you may want to install other versions of
        <application>Qt5</application>. To do that, just remove the symlink
        and use <filename class="directory">/opt/qt5</filename> as the
        prefix again. Which version of <application>Qt5</application> you
        use depends only on where the symlink points to.
      </para>
    </tip>

    <bridgehead renderas="sect3">Setting the install location for executables</bridgehead>

    <para>
      Both <application>Qt4</application> and
      <application>Qt5</application> executables have
      the same names and will overwrite each other if
      they are installed in the same prefix. To overcome
      such problem, BLFS offers <xref linkend="qtchooser"/>,
      an utility used to switch between different
      <application>Qt</application> versions.
    </para>

    <para>
      If <xref linkend="qtchooser"/> is to be used or
      if installing both <application>Qt4</application>
      and <application>Qt5</application> in
      <filename class="directory">/usr</filename>, the
      executables need to be installed to a non-standard
      location in order to avoid the conflict with
      <application>Qt4</application> ones. To accomplish
      that, set the following environment variable:
    </para>

<screen><userinput>export QT5BINDIR=$QT5PREFIX/lib/qt5/bin</userinput></screen>

    <para>
      If you choose not to install <xref linkend="qtchooser"/>
      or if you are not going to install
      <application>Qt4</application>, simply set the bindir to
      a <filename class="directory">bin</filename> subdir of the
      default prefix by setting the following environment variable:
    </para>

<screen><userinput>export QT5BINDIR=$QT5PREFIX/bin</userinput></screen>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Qt5</title>

    <caution>
      <para>
        If you did not install some of the recommended dependencies, examine
        <command>./configure --help</command> output to check how to disable
        them or use internal versions bundled in the source tarball.
      </para>
    </caution>

    <warning>
      <para>
        If <application>Qt5</application> is being reinstalled into the
        same directory as an existing instance, run the commands done by
        <systemitem class="username">root</systemitem>, such as
        <command>make install</command>, from a console or non-Qt5 based
        window manager. It overwrites <application>Qt5</application>
        libraries that should not be in use during the install process.
      </para>
    </warning>

    <para>
      Install <application>Qt5</application> by running the
      following commands:
    </para>

<screen><userinput>./configure -prefix         $QT5PREFIX                        \
            -sysconfdir     /etc/xdg                          \
            -bindir         $QT5BINDIR                        \
            -headerdir      $QT5PREFIX/include/qt5            \
            -archdatadir    $QT5PREFIX/lib/qt5                \
            -datadir        $QT5PREFIX/share/qt5              \
            -docdir         $QT5PREFIX/share/doc/qt5          \
            -translationdir $QT5PREFIX/share/qt5/translations \
            -examplesdir    $QT5PREFIX/share/doc/qt5/examples \
            -confirm-license \
            -opensource      \
            -dbus-linked     \
            -openssl-linked  \
            -system-harfbuzz \
            -system-sqlite   \
            -nomake examples \
            -optimized-qmake &amp;&amp;
make</userinput></screen>

    <para>
      This package does not come with a test suite.
    </para>

    <para>
      Remove references to the build directory from the
      <filename class="extension">.pc</filename> files by running
      the following command:
    </para>

<screen><userinput>find . -name "*.pc" -exec perl -pi -e "s, -L$PWD/?\S+,,g" {} \;</userinput></screen>

    <warning>
      <para>
        Make sure that <envar>QT5PREFIX</envar> and <envar>QT5BINDIR</envar>
        environment variables are set for the
        <systemitem class="username">root</systemitem> user too.
      </para>
    </warning>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

    <para>
      Remove references to the build directory from installed files by
      running the following commands as the
      <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>sed -e "s:$PWD/qtbase:$QT5PREFIX/lib/qt5:g" \
    -i $QT5PREFIX/lib/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri &amp;&amp;

find $QT5PREFIX/lib/lib{Enginio,qgsttools_p,Qt5*}.prl -exec sed -i -r \
     '/^QMAKE_PRL_BUILD_DIR/d;s/(QMAKE_PRL_LIBS =).*/\1/' {} \;</userinput></screen>

    <para>
      Install images and create the menu entries for installed
      applications by running the following commands 
      as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>install -v -Dm644 qttools/src/assistant/assistant/images/assistant-128.png \
                  /usr/share/pixmaps/assistant-qt5.png &amp;&amp;

install -v -Dm644 qttools/src/designer/src/designer/images/designer.png \
                  /usr/share/pixmaps/designer-qt5.png &amp;&amp;

install -v -Dm644 qttools/src/linguist/linguist/images/icons/linguist-128-32.png \
                  /usr/share/pixmaps/linguist-qt5.png &amp;&amp;

install -v -Dm644 qttools/src/qdbus/qdbusviewer/images/qdbusviewer-128.png \
                  /usr/share/pixmaps/qdbusviewer-qt5.png &amp;&amp;

install -v -dm755 /usr/share/applications &amp;&amp;

cat &gt; /usr/share/applications/assistant-qt5.desktop &lt;&lt; EOF
<literal>[Desktop Entry]
Name=Qt5 Assistant 
Comment=Shows Qt5 documentation and examples
Exec=$QT5BINDIR/assistant
Icon=assistant-qt5.png
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;Documentation;</literal>
EOF

cat &gt; /usr/share/applications/designer-qt5.desktop &lt;&lt; EOF
<literal>[Desktop Entry]
Name=Qt5 Designer
GenericName=Interface Designer
Comment=Design GUIs for Qt5 applications
Exec=$QT5BINDIR/designer
Icon=designer-qt5.png
MimeType=application/x-designer;
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;</literal>
EOF

cat &gt; /usr/share/applications/linguist-qt5.desktop &lt;&lt; EOF
<literal>[Desktop Entry]
Name=Qt5 Linguist
Comment=Add translations to Qt5 applications
Exec=$QT5BINDIR/linguist
Icon=linguist-qt5.png
MimeType=text/vnd.trolltech.linguist;application/x-linguist;
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;</literal>
EOF

cat &gt; /usr/share/applications/qdbusviewer-qt5.desktop &lt;&lt; EOF
<literal>[Desktop Entry]
Name=Qt5 QDbusViewer 
GenericName=D-Bus Debugger
Comment=Debug D-Bus applications
Exec=$QT5BINDIR/qdbusviewer
Icon=qdbusviewer-qt5.png
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;Debugger;</literal>
EOF</userinput></screen>

    <para>
      Some packages look for <application>Qt5</application> executables
      with <filename>-qt5</filename> suffix. Run the following command
      as the <systemitem class="username">root</systemitem> user to
      create the necessary symlinks:
    </para>

<screen role="root"><userinput>for file in assistant designer lconvert linguist lrelease lupdate   \
            moc pixeltool qcollectiongenerator qdbus qdbuscpp2xml   \
            qdbusviewer qdbusxml2cpp qdoc qhelpconverter            \
            qhelpgenerator qlalr qmake qml qml1plugindump qmlbundle \
            qmlimportscanner qmlmin qmlplugindump qmlprofiler       \
            qmlscene qmltestrunner qmlviewer qtdiag qtpaths         \
            rcc syncqt.pl uic xmlpatterns xmlpatternsvalidator
do
  ln -sfrv $QT5BINDIR/$file /usr/bin/$file-qt5
done
unset file</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para>
      <parameter>-confirm-license</parameter>: Accept license
      without prompting user during configuration.
    </para>

    <para>
      <parameter>-opensource</parameter>: Install the opensource
      version of <application>Qt</application>.
    </para>

    <para>
      <parameter>-release</parameter>: This switch disables
      building with debugging symbols.
    </para>

    <para>
      <parameter>-nomake examples</parameter>: This switch
      disables building of the example programs included
      in the source tarball. Remove it if you want to build
      them.
    </para>

    <para>
      <parameter>-system-harfbuzz</parameter>: This switch enables use
      of the system version of <application>Harfbuzz</application>
      which fixes some font rendering issues in
      <application>Qt5</application> applications.
    </para>

    <para>
      <parameter>-system-sqlite</parameter>: This switch enables use
      of the system version of <application>SQLite</application>.
    </para>

    <para>
      <parameter>-dbus-linked -openssl-linked</parameter>: These
      switches enable explicit linking of the
      <application>D-Bus</application> and
      <application>OpenSSL</application> libraries into
      <application>Qt5</application> libraries instead of
      <command>dlopen()</command>-ing them.
    </para>

    <para>
      <parameter>-optimized-qmake</parameter>: This switch enables
      building of the optimized <command>qmake</command> program.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuring Qt5</title>

    <sect3 id="qt5-config">
      <title>Configuration Information</title>

      <para>
        Ensure that environment variables needed by certain packages
        are set by running the following command as the
        <systemitem class="username">root</systemitem> user:
      </para>

<screen role="root"><userinput>cat &gt; /etc/profile.d/qt5.sh &lt;&lt; EOF
<literal># Begin /etc/profile.d/qt5.sh

export QT5DIR=$QT5PREFIX
export QT5BINDIR=$QT5BINDIR

# End /etc/profile.d/qt5.sh</literal>
EOF</userinput></screen>

      <note>
        <para>
          If you have installed <application>Qt5</application>
          in <filename class="directory">/usr</filename> you
          can skip the rest of this section.
        </para>
      </note>

      <para>
        If you installed <application>Qt5</application> in a location other
        than <filename class="directory">/usr</filename>, you need to update the
        following configuration files so that <application>Qt5</application> is
        correctly found by other packages and system processes.
      </para>

      <para>
        As the <systemitem class="username">root</systemitem> user, update
        the <filename>/etc/ld.so.conf</filename> file and the dynamic linker's
        run-time cache file:
      </para>

<screen role="root"><userinput>cat &gt;&gt; /etc/ld.so.conf &lt;&lt; EOF
<literal># Begin Qt5 addition

$QT5PREFIX/lib

# End Qt5 addition</literal>
EOF

ldconfig</userinput></screen>

      <indexterm zone="qt5 qt5-config">
        <primary sortas="e-etc-ld.so.conf">/etc/ld.so.conf</primary>
      </indexterm>

      <para>
        If you have installed <xref linkend="qtchooser"/>, create
        the <filename>/etc/profile.d/qt5.sh</filename> file by
        running the following command as the
        <systemitem class="username">root</systemitem> user:
      </para>

<screen role="root"><userinput>cat &gt; /etc/profile.d/qt5.sh &lt;&lt; EOF
<literal># Begin /etc/profile.d/qt5.sh

export QT5DIR=$QT5PREFIX
export QT5BINDIR=$QT5BINDIR

pathappend $QT5PREFIX/lib/pkgconfig PKG_CONFIG_PATH

# End /etc/profile.d/qt5.sh</literal>
EOF</userinput></screen>

      <para>
        If you have not installed <xref linkend="qtchooser"/>,
        create the <filename>/etc/profile.d/qt5.sh</filename>
        file by running the following command as the
        <systemitem class="username">root</systemitem> user:
      </para>

<screen role="root"><userinput>cat &gt; /etc/profile.d/qt5.sh &lt;&lt; EOF
<literal># Begin /etc/profile.d/qt5.sh

export QT5DIR=$QT5PREFIX
export QT5BINDIR=$QT5BINDIR

pathappend $QT5BINDIR               PATH
pathappend $QT5PREFIX/lib/pkgconfig PKG_CONFIG_PATH

# End /etc/profile.d/qt5.sh</literal>
EOF</userinput></screen>

      <note>
        <para>
          If <xref linkend="qtchooser"/> is not installed and you
          also have <application>Qt4</application> installed,
          you will need to manually adjust the <envar>PATH</envar>
          variable depending on which <application>Qt</application>
          version is needed.
        </para>
      </note>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          assistant, designer, lconvert, linguist, lrelease,
          lupdate, moc, pixeltool, qcollectiongenerator, qdbuscpp2xml,
          qdbus, qdbusviewer, qdbusxml2cpp, qdoc, qhelpconverter,
          qhelpgenerator, qlalr, qmake, qml1plugindump, qmlbundle,
          qmlimportscanner, qmlmin, qmlplugindump, qmlprofiler, qml,
          qmlscene, qmltestrunner, qmlviewer, qtdiag, qtpaths, rcc,
          syncqt.pl, uic, xmlpatterns, and xmlpatternsvalidator
        </seg>
        <seg>
          libEnginio.so, libqgsttools_p.so, libQt5Bluetooth.so,
          libQt5Bootstrap.a, libQt5CLucene.so, libQt5Concurrent.so,
          libQt5Core.so, libQt5DBus.so, libQt5Declarative.so,
          libQt5DesignerComponents.so, libQt5Designer.so, libQt5Gui.so,
          libQt5Help.so, libQt5MultimediaQuick_p.so, libQt5Multimedia.so,
          libQt5MultimediaWidgets.so, libQt5Network.so, libQt5Nfc.so,
          libQt5OpenGLExtensions.a, libQt5OpenGL.so, libQt5PlatformSupport.a,
          libQt5Positioning.so, libQt5PrintSupport.so, libQt5QmlDevTools.a,
          libQt5Qml.so, libQt5QuickParticles.so, libQt5QuickWidgets.so,
          libQt5Quick.so, libQt5QuickTest.so, libQt5Script.so,
          libQt5ScriptTools.so, libQt5Sensors.so, libQt5SerialPort.so,
          libQt5Sql.so, libQt5Svg.so, libQt5Test.so, libQt5UiTools.a,
          libQt5WebKit.so, libQt5WebKitWidgets.so, libQt5WebSockets.so,
          libQt5Widgets.so, libQt5X11Extras.so, libQt5XmlPatterns.so,
          libQt5Xml.so, and several plugins under /opt/qt5/{imports,plugins,qml}
        </seg>
        <seg>
          $QT5PREFIX/include/qt5,
          $QT5PREFIX/lib/qt5,
          $QT5PREFIX/share/doc/qt5, and
          $QT5PREFIX/share/qt5
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="assistant-qt5">
        <term><command>assistant</command></term>
        <listitem>
          <para>
            is a tool for presenting on-line documentation.
          </para>
          <indexterm zone="qt5 assistant-qt5">
            <primary sortas="b-assistant-qt5">assistant</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="designer-qt5">
        <term><command>designer</command></term>
        <listitem>
          <para>
            is a full-fledged GUI builder. It includes
            powerful features such as preview mode, automatic widget
            layout, support for custom widgets, and an advanced
            property editor.
          </para>
          <indexterm zone="qt5 designer-qt5">
            <primary sortas="b-designer-qt5">designer</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="linguist-qt5">
        <term><command>linguist</command></term>
        <listitem>
          <para>
            provides support for translating applications into
            local languages.
          </para>
          <indexterm zone="qt5 linguist-qt5">
            <primary sortas="b-linguist-qt5">linguist</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lrelease-qt5">
        <term><command>lrelease</command></term>
        <listitem>
          <para>
            is a simple command line tool. It reads a Qt project
            file and produces message files used by the application.
          </para>
          <indexterm zone="qt5 lrelease-qt5">
            <primary sortas="b-lrelease-qt5">lrelease</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lupdate-qt5">
        <term><command>lupdate</command></term>
        <listitem>
          <para>
            reads a Qt project file, finds the translatable
            strings in the specified source, header and Qt Designer
            interface files, and produces or updates the translation
            files listed in the project file.
          </para>
          <indexterm zone="qt5 lupdate-qt5">
            <primary sortas="b-lupdate-qt5">lupdate</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="moc-qt5">
        <term><command>moc</command></term>
        <listitem>
          <para>
            generates Qt meta object support code.
          </para>
          <indexterm zone="qt5 moc-qt5">
            <primary sortas="b-moc-qt5">moc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pixeltool-qt5">
        <term><command>pixeltool</command></term>
        <listitem>
          <para>
            is a desktop magnifier and as you move your mouse around
            the screen it will show the magnified contents in its window.
          </para>
          <indexterm zone="qt5 pixeltool-qt5">
            <primary sortas="b-pixeltool-qt5">pixeltool</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="qmake-qt5">
        <term><command>qmake</command></term>
        <listitem>
          <para>
            uses information stored in project files to
            determine what should go in the makefiles it
            generates.
          </para>
          <indexterm zone="qt5 qmake-qt5">
            <primary sortas="b-qmake-qt5">qmake</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rcc-qt5">
        <term><command>rcc</command></term>
        <listitem>
          <para>
            is a resource compiler used in conjunction with designer.
          </para>
          <indexterm zone="qt5 rcc-qt5">
            <primary sortas="b-rcc-qt5">rcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="uic-qt5">
        <term><command>uic</command></term>
        <listitem>
          <para>
            is a Qt user interface compiler.
          </para>
          <indexterm zone="qt5 uic-qt5">
            <primary sortas="b-uic-qt5">uic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
